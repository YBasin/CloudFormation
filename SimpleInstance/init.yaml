Parameters:
  NameOfService:
    Description: "The name of the service this stack is used for."
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
    Description: "Enter t2.micro, t2.small, t2.medium, m1.small, or m1.large. Default is t2.micro."
  KeyName:
    Description: "Name of the EC2 KeyPair."
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  AmiRegionMap:
    us-east-1:
      MyAMI1: ami-0a5c3558529277641
    us-east-2:
      MyAMI1: ami-003932de22c285676
    us-west-1:
      MyAMI1: ami-025258b26b492aec6
    us-west-2:
      MyAMI1: ami-05134c8ef96964280

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            apt:
              php: []
              apache2: []
              wget: []
              git: []
              unzip: []
          commands:
            test:
              command: 
                "wget https://www.tooplate.com/zip-templates/2137_barista_cafe.zip
                && unzip 2137_barista_cafe.zip
                && cp -r 2137_barista_cafe/* /var/www/html/
                && chown -R www-data:www-data /var/www/html/"
          files:
            "/var/www/html/hello.html":
              content: !Sub |
                <!DOCTYPE html>
                <html>
                <body>
                  <h1>Welcome to CloudFormation.</h1>
                  <p>This is deployed by CloudFormation.</p>
                </body>
                </html>
          services:
            sysvinit:
              apache2:
                enabled: true 
                ensureRunning: true 

    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref "AWS::Region"
        - MyAMI1
      Tags:
        - Key: "Name"
          Value: !Join
            - " "
            - - !Ref NameOfService
              - "My Instance in"
              - !Ref "AWS::Region"
      SecurityGroups:
        - !Ref VprofileSG
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash -xe
            apt-get update -y
            apt-get install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyInstance --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MyInstance --region ${AWS::Region}

  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HTTP and SSH From Everywhere"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - MyInstance
      - PublicDnsName

